(defvar counter (lambda (c)
  (let ((i ())
        (c c))
    (let ((inc (lambda ()
            (setq i (cons c i))))
          (dec (lambda ()
            (if i (setq i (cdr i)) i))))
      (lambda (a)
        (if (eq a 'inc) inc
        (if (eq a 'dec) dec
        nil)))))))

(defvar counter1 (counter (quote a)))
(defvar counter2 (counter (quote b)))
((counter1 'inc))
((counter2 'inc))
((counter1 'inc))
((counter1 'dec))
((counter1 'inc))
((counter1 'inc))
((counter2 'inc))
((counter2 'inc))
((counter1 'inc))
((counter2 'dec))
((counter1 'inc))
((counter2 'inc))
((counter2 'inc))
